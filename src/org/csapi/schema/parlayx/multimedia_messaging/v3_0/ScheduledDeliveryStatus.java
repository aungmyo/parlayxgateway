//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-792 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.02.26 at 11:20:45 ÉÏÎç CST 
//


package org.csapi.schema.parlayx.multimedia_messaging.v3_0;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ScheduledDeliveryStatus.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ScheduledDeliveryStatus">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Scheduled"/>
 *     &lt;enumeration value="NotSent"/>
 *     &lt;enumeration value="Sent"/>
 *     &lt;enumeration value="Cancelled"/>
 *     &lt;enumeration value="PartiallySent"/>
 *     &lt;enumeration value="StatusUnavailable"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ScheduledDeliveryStatus")
@XmlEnum
public enum ScheduledDeliveryStatus {

    @XmlEnumValue("Scheduled")
    SCHEDULED("Scheduled"),
    @XmlEnumValue("NotSent")
    NOT_SENT("NotSent"),
    @XmlEnumValue("Sent")
    SENT("Sent"),
    @XmlEnumValue("Cancelled")
    CANCELLED("Cancelled"),
    @XmlEnumValue("PartiallySent")
    PARTIALLY_SENT("PartiallySent"),
    @XmlEnumValue("StatusUnavailable")
    STATUS_UNAVAILABLE("StatusUnavailable");
    private final String value;

    ScheduledDeliveryStatus(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ScheduledDeliveryStatus fromValue(String v) {
        for (ScheduledDeliveryStatus c: ScheduledDeliveryStatus.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
