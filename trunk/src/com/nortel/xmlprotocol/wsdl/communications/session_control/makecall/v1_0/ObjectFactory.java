//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-792 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.02.26 at 11:20:45 ÉÏÎç CST 
//


package com.nortel.xmlprotocol.wsdl.communications.session_control.makecall.v1_0;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.nortel.xmlprotocol.wsdl.communications.session_control.makecall.v1_0 package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.nortel.xmlprotocol.wsdl.communications.session_control.makecall.v1_0
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link MakecallWithAnnouncement }
     * 
     */
    public MakecallWithAnnouncement createMakecallWithAnnouncement() {
        return new MakecallWithAnnouncement();
    }

    /**
     * Create an instance of {@link ServiceException }
     * 
     */
    public ServiceException createServiceException() {
        return new ServiceException();
    }

    /**
     * Create an instance of {@link ChargingInformation }
     * 
     */
    public ChargingInformation createChargingInformation() {
        return new ChargingInformation();
    }

    /**
     * Create an instance of {@link MakeCallPolicyException }
     * 
     */
    public MakeCallPolicyException createMakeCallPolicyException() {
        return new MakeCallPolicyException();
    }

    /**
     * Create an instance of {@link MakecallWithAnnouncementResponse }
     * 
     */
    public MakecallWithAnnouncementResponse createMakecallWithAnnouncementResponse() {
        return new MakecallWithAnnouncementResponse();
    }

    /**
     * Create an instance of {@link MakeCallServiceException }
     * 
     */
    public MakeCallServiceException createMakeCallServiceException() {
        return new MakeCallServiceException();
    }

    /**
     * Create an instance of {@link PolicyException }
     * 
     */
    public PolicyException createPolicyException() {
        return new PolicyException();
    }

    /**
     * Create an instance of {@link MakeCallWithAnnouncementResponseType }
     * 
     */
    public MakeCallWithAnnouncementResponseType createMakeCallWithAnnouncementResponseType() {
        return new MakeCallWithAnnouncementResponseType();
    }

    /**
     * Create an instance of {@link MakeCallWithAnnouncementType }
     * 
     */
    public MakeCallWithAnnouncementType createMakeCallWithAnnouncementType() {
        return new MakeCallWithAnnouncementType();
    }

}
