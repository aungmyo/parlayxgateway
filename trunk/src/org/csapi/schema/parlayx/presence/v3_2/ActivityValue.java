//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-792 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.02.26 at 11:20:45 ÉÏÎç CST 
//


package org.csapi.schema.parlayx.presence.v3_2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ActivityValue.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ActivityValue">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="ActivityNone"/>
 *     &lt;enumeration value="Appointment"/>
 *     &lt;enumeration value="Available"/>
 *     &lt;enumeration value="Busy"/>
 *     &lt;enumeration value="DoNotDisturb"/>
 *     &lt;enumeration value="OnThePhone"/>
 *     &lt;enumeration value="Steering"/>
 *     &lt;enumeration value="Meeting"/>
 *     &lt;enumeration value="Away"/>
 *     &lt;enumeration value="Meal"/>
 *     &lt;enumeration value="Breakfast"/>
 *     &lt;enumeration value="Lunch"/>
 *     &lt;enumeration value="Dinner"/>
 *     &lt;enumeration value="PermanentAbsence"/>
 *     &lt;enumeration value="Vacation"/>
 *     &lt;enumeration value="Holiday"/>
 *     &lt;enumeration value="Performance"/>
 *     &lt;enumeration value="InTransit"/>
 *     &lt;enumeration value="Travel"/>
 *     &lt;enumeration value="Sleeping"/>
 *     &lt;enumeration value="LookingForWork"/>
 *     &lt;enumeration value="Playing"/>
 *     &lt;enumeration value="Presentation"/>
 *     &lt;enumeration value="Shopping"/>
 *     &lt;enumeration value="Spectator"/>
 *     &lt;enumeration value="TV"/>
 *     &lt;enumeration value="Working"/>
 *     &lt;enumeration value="Worship"/>
 *     &lt;enumeration value="ActivityOther"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ActivityValue")
@XmlEnum
public enum ActivityValue {

    @XmlEnumValue("ActivityNone")
    ACTIVITY_NONE("ActivityNone"),
    @XmlEnumValue("Appointment")
    APPOINTMENT("Appointment"),
    @XmlEnumValue("Available")
    AVAILABLE("Available"),
    @XmlEnumValue("Busy")
    BUSY("Busy"),
    @XmlEnumValue("DoNotDisturb")
    DO_NOT_DISTURB("DoNotDisturb"),
    @XmlEnumValue("OnThePhone")
    ON_THE_PHONE("OnThePhone"),
    @XmlEnumValue("Steering")
    STEERING("Steering"),
    @XmlEnumValue("Meeting")
    MEETING("Meeting"),
    @XmlEnumValue("Away")
    AWAY("Away"),
    @XmlEnumValue("Meal")
    MEAL("Meal"),
    @XmlEnumValue("Breakfast")
    BREAKFAST("Breakfast"),
    @XmlEnumValue("Lunch")
    LUNCH("Lunch"),
    @XmlEnumValue("Dinner")
    DINNER("Dinner"),
    @XmlEnumValue("PermanentAbsence")
    PERMANENT_ABSENCE("PermanentAbsence"),
    @XmlEnumValue("Vacation")
    VACATION("Vacation"),
    @XmlEnumValue("Holiday")
    HOLIDAY("Holiday"),
    @XmlEnumValue("Performance")
    PERFORMANCE("Performance"),
    @XmlEnumValue("InTransit")
    IN_TRANSIT("InTransit"),
    @XmlEnumValue("Travel")
    TRAVEL("Travel"),
    @XmlEnumValue("Sleeping")
    SLEEPING("Sleeping"),
    @XmlEnumValue("LookingForWork")
    LOOKING_FOR_WORK("LookingForWork"),
    @XmlEnumValue("Playing")
    PLAYING("Playing"),
    @XmlEnumValue("Presentation")
    PRESENTATION("Presentation"),
    @XmlEnumValue("Shopping")
    SHOPPING("Shopping"),
    @XmlEnumValue("Spectator")
    SPECTATOR("Spectator"),
    TV("TV"),
    @XmlEnumValue("Working")
    WORKING("Working"),
    @XmlEnumValue("Worship")
    WORSHIP("Worship"),
    @XmlEnumValue("ActivityOther")
    ACTIVITY_OTHER("ActivityOther");
    private final String value;

    ActivityValue(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ActivityValue fromValue(String v) {
        for (ActivityValue c: ActivityValue.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
